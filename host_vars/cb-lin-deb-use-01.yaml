---

# coredotbin.openssh
openssh_port: 2222
openssh_hostkeys:
  - /etc/ssh/ssh_host_ed25519_key
openssh_kexalgorithms:
  - curve25519-sha256@libssh.org
  - diffie-hellman-group-exchange-sha256
openssh_macs:
  - hmac-sha2-512-etm@openssh.com
  - hmac-sha2-256-etm@openssh.com
  - umac-128-etm@openssh.com

# ironicbadger.docker_compose_generator
appdata_path: /var/appdata
media_path: /var/media

# Container definitions
containers:
  - service_name: traefik
    active: true
    image: traefik
    ports:
      # http
      - 80:80
      # https
      - 443:443
      # ssh
      - "22:22"
    command:
      - --api.dashboard=false

      - --providers.docker
      - --providers.docker.exposedByDefault=false

      # Entrypoints
      - --entrypoints.http.address=:80
      - --entrypoints.http.http.redirections.entryPoint.to=https
      - --entrypoints.http.http.redirections.entryPoint.scheme=https

      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls.certresolver=linode

      - --entrypoints.ssh.address=:22

      # Let's Encrypt certificates
      - --certificatesResolvers.linode.acme.dnsChallenge.provider=linode
      - "--certificatesResolvers.linode.acme.email={{ admin_email_address }}"
      - --certificatesResolvers.linode.acme.storage=/etc/traefik/acme.json
    environment:
      - "LINODE_TOKEN={{ linode_dns_api_key }}"
    volumes:
      - "{{ appdata_path }}/traefik/config:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    # Can be used to temporarily enable access to the Traefik dashboard
    # labels:
    #   - traefik.enable=true
    #   - treafik.http.routers.api.entrypoints=http,https
    #   - "traefik.http.routers.api.rule=Host(`traefik.{{ domain_name }}`)"
    #   - treafik.http.routers.api.service=api@internal
    restart: unless-stopped
  - service_name: mysql
    active: true
    image: mysql:5.7
    volumes:
      - "{{ appdata_path }}/mysql:/var/lib/mysql"
    environment:
      - "MYSQL_DATABASE={{ wordpress.mysql_database }}"
      - "MYSQL_USER={{ wordpress.mysql_user }}"
      - "MYSQL_PASSWORD={{ wordpress.mysql_password }}"
      - MYSQL_RANDOM_ROOT_PASSWORD=1
    restart: always
  # Wordpress - https://hub.docker.com/_/wordpress
  - service_name: wordpress
    active: true
    image: wordpress
    labels:
      - traefik.enable=true
      - "traefik.http.routers.wordpress.rule=\
         (Host(`kspier.net`) || Host(`www.kspier.net`))"
      - traefik.http.services.wordpress.loadbalancer.server.port=80
    volumes:
      - "{{ appdata_path }}/wordpress:/var/www/html"
    environment:
      - WORDPRESS_DB_HOST=mysql
      - "WORDPRESS_DB_NAME={{ wordpress.mysql_database }}"
      - "WORDPRESS_DB_USER={{ wordpress.mysql_user }}"
      - "WORDPRESS_DB_PASSWORD={{ wordpress.mysql_password }}"
    restart: unless-stopped

  # PostgreSQL
  - service_name: postgres
    active: true
    image: postgres:14
    environment:
      - POSTGRES_DATABASE=gitea
      - POSTGRES_USER=gitea
      - "POSTGRES_PASSWORD={{ postgres.gitea_password }}"
    volumes:
      - "{{ appdata_path }}/postgresql/data:/var/lib/postgresql/data"
    restart: unless-stopped
  # Gitea
  - service_name: gitea
    active: true
    image: gitea/gitea:1.20.5
    labels:
      - traefik.enable=true
      # Web
      - "traefik.http.routers.gitea.rule=Host(`git.{{ domain_name }}`)"
      - traefik.http.routers.gitea.entrypoints=http,https
      - treafik.http.routers.gitea.service=gitea@docker
      - traefik.http.services.gitea.loadbalancer.server.port=3000

      # SSH
      - traefik.tcp.routers.gitea-ssh.rule=ClientIP(`0.0.0.0`)
      - traefik.tcp.routers.gitea-ssh.entrypoints=ssh
      - traefik.tcp.routers.gitea-ssh.service=gitea-ssh@docker
      - traefik.tcp.services.gitea-ssh.loadbalancer.server.port=2200
    include_global_env_vars: true
    # https://docs.gitea.com/next/installation
    # /install-with-docker#managing-deployments-with-environment-variables
    # > "... any settings in `app.ini` can be set or overridden with an
    # > environment variable of the form: `GITEA__SECTION_NAME__KEY_NAME`"
    environment:
      # HTTP server configuration
      - "GITEA__server__DOMAIN=git.{{ domain_name }}"
      - "GITEA__server__ROOT_URL=https://git.{{ domain_name }}"
      # Internal SSH server configuration
      - GITEA__server__START_SSH_SERVER=false
      - "GITEA__server__SSH_DOMAIN=git.{{ domain_name }}"
      - GITEA__server__SSH_PORT=2200
      - GITEA__server__SSH_LISTEN_PORT=2200
      # Default values
      # - GITEA__server__SSH_SERVER_KEY_EXCHANGES=
      # - GITEA__server__SSH_SERVER_MACS=
      # - GITEA__server__SSH_SERVER_HOST_KEYS=ssh/gitea.rsa,ssh/gogs.rsa
      # Service configuration
      - GITEA__service__DISABLE_REGISTRATION=true
      # Database configuration
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=postgres:5432
      - GITEA__database__NAME=gitea
      - GITEA__database__USER=gitea
      - "GITEA__database__PASS={{ postgres.gitea_password }}"
    volumes:
      - "{{ appdata_path }}/gitea:/data"
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - postgres
    restart: unless-stopped

autorestic_locations:
  - name: cb-lin-deb-use-01-app-data
    from: "{{ appdata_path }}"
    to:
      - backblaze
